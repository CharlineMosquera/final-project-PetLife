// VALIDACI√ìN PARA EL FORM DE REGISTRO

// Validaci√≥n para el nombre
document.getElementById("nombre").addEventListener("input", function () {
  // Seleccionamos el id y a√±adimos un listener para que escuche cuando el usuario escriba
  const nombre = this.value.trim(); // Guardamos el valor ingresado
  const errorNombre = document.getElementById("error-nombre"); // Seleccionamos el p√°rrafo que mostrar√° el mensaje de error

  // Si el campo est√° vac√≠o:
  if (nombre === "") {
    errorNombre.textContent = "El nombre es obligatorio."; // Mostramos el error
    errorNombre.classList.remove("d-none", "alert-success"); // Removemos las clases del mensaje de success
    errorNombre.classList.add("alert-danger"); // A√±adimos la clase del mensaje de error
  } else {
    errorNombre.classList.remove("alert-danger"); // Ocultamos el mensaje de error
    errorNombre.classList.add("alert-success"); // Mostramos el mensaje de √©xito
    errorNombre.textContent = "¬°Nombre v√°lido!";
    errorNombre.classList.remove("d-none");
  }
});

// Validaci√≥n para el correo electr√≥nico
document.getElementById("email").addEventListener("input", function () {
  const email = this.value.trim(); // Guardamos el valor ingresado, eliminando cualquier espacio extra al principio o final (trim)
  const errorEmail = document.getElementById("error-email");
  const emailPattern = /^[^@]+@[^@]+\.[a-zA-Z]{2,}$/; // Regex para verificar si el formato del correo electr√≥nico es v√°lido

  // Si el correo no cumple con el patr√≥n:
  if (!emailPattern.test(email)) {
    errorEmail.textContent = "Ingresa un correo electr√≥nico v√°lido."; // Mostramos el error
    errorEmail.classList.remove("d-none", "alert-success");
    errorEmail.classList.add("alert-danger");
  } else {
    // Si el correo es v√°lido:
    errorEmail.classList.remove("alert-danger"); // Ocultamos el mensaje de error
    errorEmail.classList.add("alert-success");
    errorEmail.textContent = "¬°Correo electr√≥nico v√°lido!"; // A√±adimos mensaje de validaci√≥n exitosa
    errorEmail.classList.remove("d-none");
  }
});

// Validaci√≥n para el tel√©fono
document.getElementById("phone").addEventListener("input", function () {
  const phone = this.value.trim();
  const errorPhone = document.getElementById("error-phone");
  const phonePattern = /^[0-9]{10}$/; // Regex para verificar si el formato del tel√©fono es v√°lido

  // Si el n√∫mero no cumple con el patr√≥n:
  if (!phonePattern.test(phone)) {
    errorPhone.textContent =
      "Ingresa un n√∫mero de tel√©fono v√°lido de 10 d√≠gitos."; // Mostramos el error
    errorPhone.classList.remove("d-none", "alert-success");
    errorPhone.classList.add("alert-danger");
  } else {
    errorPhone.classList.remove("alert-danger");
    errorPhone.classList.add("alert-success");
    errorPhone.textContent = "¬°N√∫mero de tel√©fono v√°lido!"; // A√±adimos mensaje de validaci√≥n exitosa
    errorPhone.classList.remove("d-none");
  }
});

// Validaci√≥n para las contrase√±as
document
  .getElementById("password-confirm")
  .addEventListener("input", function () {
    const password1 = document.getElementById("password").value;
    const password2 = this.value;
    const matchMessage = document.getElementById("match-message");
    const errorPassword = document.getElementById("error-password");

    // Validaci√≥n de longitud para la contrase√±a
    if (password1.length < 8) {
      errorPassword.textContent =
        "La contrase√±a debe tener al menos 8 caracteres.";
      errorPassword.classList.remove("d-none", "alert-success");
      errorPassword.classList.add("alert-danger");
    } else if (password1.length > 14) {
      errorPassword.textContent =
        "La contrase√±a no puede exceder los 14 caracteres.";
      errorPassword.classList.remove("d-none", "alert-success");
      errorPassword.classList.add("alert-danger");
    } else {
      errorPassword.textContent = "";
      errorPassword.classList.add("d-none");
    }

    // Validaci√≥n para verificar si las contrase√±as coinciden
    if (password1 !== password2) {
      matchMessage.textContent = "Las contrase√±as no coinciden.";
      matchMessage.classList.add("alert-danger");
    } else {
      matchMessage.textContent = "Las contrase√±as coinciden.";
      matchMessage.classList.remove("d-none", "alert-danger");
      matchMessage.classList.add("alert-success");
    }
  });

// Cuando de click en el Boton de Crear Cuenta 
document
  .getElementById("form-registro")
  .addEventListener("submit", function (event) {
    event.preventDefault();

    // Obtener las constase√±as y verificar si son iguales
    const password1 = document.getElementById("password").value
    const password2 = document.getElementById("password-confirm").value
    const errorAccountCreation = document.getElementById("error-accountcreation");

    if (password1 !== password2) {
      errorAccountCreation.textContent = "Las contrase√±as no coinciden. Aseg√∫rate de ingresar la misma contrase√±a para crear tu cuenta.";
      errorAccountCreation.classList.remove("d-none", "alert-success");
      errorAccountCreation.classList.add("alert-danger");
      return; //Detenemos la ejecuci√≥n si la contrase√±a no es igual

    } else {
      // Si las contrase√±as coinciden, ocultamos el error
      errorAccountCreation.textContent = "";
      errorAccountCreation.classList.add("d-none");   
    }

    // Se crea el objeto usuario
    const nuevoUsuario = {
      nombre: nombre.value,
      email: email.value,
      phone: phone.value,
      password: btoa(password.value), // Cifra la contrase√±a
    };

    // crea o toma los valores del array usuarios
    let Usuarios = JSON.parse(localStorage.getItem("usuarios")) || [];

    // Valida si el usuario existe
    const usuarioExistente = Usuarios.find(
      (usuario) => usuario.email == nuevoUsuario.email
    );
    if (usuarioExistente) {
      // si el usuario ya existe muestra la alerta y sale de la funcion
        Swal.fire({
            title: 'Error!',
            text: 'El usuario ya esta registrado',
            icon: 'error',
            confirmButtonText: 'Volver a intentar'
        })
      return;
    }

    // Agrega el usuario al array
    Usuarios.push(nuevoUsuario);
    // lo guarda en el localStorage como json
    localStorage.setItem("usuarios", JSON.stringify(Usuarios, null, 2));

    // Muestra confirmacion de que se creo el usuario
      Swal.fire({
          title: 'Usuario registrado con √©xito',
          icon: 'success',
          showConfirmButton: false,
          timer: 1500
      }).then(() => {
          // Resetea el formulario
          document.getElementById("form-registro").reset();

          // Lo envia a la pagina de login
          window.location.href = "../html/login.html";
      })
  });


// Obtener elementos del DOM
const passwordInput = document.getElementById('password');
const passwordInputConfirm = document.getElementById('password-confirm');
const togglePassword = document.getElementById('toggle-password');
const togglePasswordConfirm = document.getElementById('toggle-password-confirm');

// Agregar evento de clic para alternar la visibilidad de la contrase√±a
togglePassword.addEventListener('click', function () {
    // Verifica si el campo de contrase√±a est√° en modo "password"
    if (passwordInput.type === 'password') {
        passwordInput.type = 'text'; // Cambiar a texto para mostrar la contrase√±a
        togglePassword.textContent = 'üôà'; // Cambiar el √≠cono a un "ojo cerrado"
    } else {
        passwordInput.type = 'password'; // Cambiar a password para ocultar la contrase√±a
        togglePassword.textContent = 'üëÅÔ∏è'; // Cambiar el √≠cono a un "ojo abierto"
    }
});

// Agregar evento de clic para alternar la visibilidad de la contrase√±a de confirmacion
togglePasswordConfirm.addEventListener('click', function () {
    // Verifica si el campo de contrase√±a est√° en modo "password"
    if (passwordInputConfirm.type === 'password') {
        passwordInputConfirm.type = 'text'; // Cambiar a texto para mostrar la contrase√±a
        togglePasswordConfirm.textContent = 'üôà'; // Cambiar el √≠cono a un "ojo cerrado"
    } else {
        passwordInputConfirm.type = 'password'; // Cambiar a password para ocultar la contrase√±a
        togglePasswordConfirm.textContent = 'üëÅÔ∏è'; // Cambiar el √≠cono a un "ojo abierto"
    }
});